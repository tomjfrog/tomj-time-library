name: (WIP) Create Release Bundle & Promote to Dev

permissions:
  id-token: write

on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      build_name:
        description: 'The name of the build to promote'
        required: false
        default: ''
      build_number:
        description: 'The number of the build to promote'
        required: false
        default: ''

jobs:
  promote:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        id: setup-jfrog-cli
        env:
          JF_URL: ${{ vars.JF_URL }}
          JF_PROJECT: "tomj-time-lib"
        with:
          oidc-provider-name: github-oidc-integration
          oidc-audience: jfrog-github

      # Find the JFrog Build-Info with the COMMIT_SHA that matches the Release Tag's COMMIT_SHA pointer.  This only works
      # if there have been new commits on the Git repo that didn't result in a new artifacy build-and-publish.  Most often,
      # this will be due to updates to this Actions spec.
      - name: Find Build Associated with Release COMMIT_SHA
        if: ${{ inputs.build_name == '' && inputs.build_number == '' }}
        working-directory: .github/workflows
        id: find-build-by-commit
        run: |
          python3 find-build.py --commit_sha ${{ github.sha }} --access_token ${{ steps.setup-jfrog-cli.outputs.oidc-token }} > build-query-result.json
          build_name=$(jq -r '.results.build.name' build-query-result.json)
          commit_number=$(jq -r 'results.build.number' build-query-result.json)
          echo "build_name=build_name" >> $GITHUB_OUTPUT
          echo "build_number=build_number" >> $GITHUB_OUTPUT

      - name: Set Build Name and Build Number to Promote
        id: set-build-info
        run: |
          # Check if inputs are provided, otherwise use outputs from previous step
          echo "build_name=${{ inputs.build_name != '' && inputs.build_name || steps.find-build-by-commit.outputs.build_name }}" >> $GITHUB_OUTPUT
          echo "build_number=${{ inputs.build_number != '' && inputs.build_number || steps.find-build-by-commit.outputs.build_number }}" >> $GITHUB_OUTPUT

      - name: Create Release Bundle
        id: create-release-bundle
        run: |
          jf release-bundle-create \
          tomj-time-lib ${{ github.run_number }} \
          --spec=./.github/workflows/filespecs/release-bundle-spec.json \
          --spec-vars="build_name=${{ steps.set-build-info.outputs.build_name }};build_number=${{ steps.set-build-info.outputs.build_number }}" \
          --signing-key="tomj-gpg-key" \
          --sync=true

      # Promote the Release Bundle to Dev
      - name: Promote Release Bundle to Snapshot Repos
        id: promote-release-bundle-to-snapshot
        run: |
          jf release-bundle-promote \
          tomj-time-lib ${{ github.run_number }} DEV \
          --signing-key="tomj-gpg-key" \